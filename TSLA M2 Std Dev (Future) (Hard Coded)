//@version=5
indicator("TSLA M2 Std Dev (Future) (Hard Coded)", overlay=true, max_polylines_count=100)

// ── Inputs ───────────────────────────────────────────────────
showFuture = input.bool(true, title="Show Future Projection")
baseCol    = input.color(#009AFF, title="Base Color")

// ── Raw Data Arrays ──────────────────────────────────────────
var int[]   times = array.new_int()
var float[] m3    = array.new_float()   // –3σ
var float[] m2    = array.new_float()   // –2σ
var float[] m1    = array.new_float()   // –1σ
var float[] fv    = array.new_float()   // fair value
var float[] p1    = array.new_float()   // +1σ
var float[] p2    = array.new_float()   // +2σ
var float[] p3    = array.new_float()   // +3σ

if barstate.isfirst
    // Populate TSLA projection arrays
    array.push(times, timestamp(2025, 6, 26, 0, 0))
    array.push(m3,    316.29)
    array.push(m2,    355.86)
    array.push(m1,    395.43)
    array.push(fv,    434.99)
    array.push(p1,    474.56)
    array.push(p2,    514.13)
    array.push(p3,    553.7)
    array.push(times, timestamp(2025, 6, 27, 0, 0))
    array.push(m3,    313.65)
    array.push(m2,    353.22)
    array.push(m1,    392.79)
    array.push(fv,    432.36)
    array.push(p1,    471.93)
    array.push(p2,    511.5)
    array.push(p3,    551.07)
    array.push(times, timestamp(2025, 6, 28, 0, 0))
    array.push(m3,    303.93)
    array.push(m2,    343.5)
    array.push(m1,    383.07)
    array.push(fv,    422.64)
    array.push(p1,    462.21)
    array.push(p2,    501.78)
    array.push(p3,    541.35)
    array.push(times, timestamp(2025, 6, 29, 0, 0))
    array.push(m3,    298.76)
    array.push(m2,    338.33)
    array.push(m1,    377.9)
    array.push(fv,    417.47)
    array.push(p1,    457.04)
    array.push(p2,    496.61)
    array.push(p3,    536.17)
    array.push(times, timestamp(2025, 7, 2, 0, 0))
    array.push(m3,    293.2)
    array.push(m2,    332.77)
    array.push(m1,    372.34)
    array.push(fv,    411.91)
    array.push(p1,    451.48)
    array.push(p2,    491.05)
    array.push(p3,    530.62)
    array.push(times, timestamp(2025, 7, 3, 0, 0))
    array.push(m3,    293.72)
    array.push(m2,    333.29)
    array.push(m1,    372.85)
    array.push(fv,    412.42)
    array.push(p1,    451.99)
    array.push(p2,    491.56)
    array.push(p3,    531.13)
    array.push(times, timestamp(2025, 7, 4, 0, 0))
    array.push(m3,    285.22)
    array.push(m2,    324.79)
    array.push(m1,    364.36)
    array.push(fv,    403.93)
    array.push(p1,    443.5)
    array.push(p2,    483.06)
    array.push(p3,    522.63)
    array.push(times, timestamp(2025, 7, 5, 0, 0))
    array.push(m3,    289.4)
    array.push(m2,    328.97)
    array.push(m1,    368.54)
    array.push(fv,    408.11)
    array.push(p1,    447.68)
    array.push(p2,    487.25)
    array.push(p3,    526.82)
    array.push(times, timestamp(2025, 7, 6, 0, 0))
    array.push(m3,    294.41)
    array.push(m2,    333.98)
    array.push(m1,    373.55)
    array.push(fv,    413.12)
    array.push(p1,    452.69)
    array.push(p2,    492.26)
    array.push(p3,    531.83)
    array.push(times, timestamp(2025, 7, 9, 0, 0))
    array.push(m3,    333.72)
    array.push(m2,    373.29)
    array.push(m1,    412.86)
    array.push(fv,    452.43)
    array.push(p1,    492.0)
    array.push(p2,    531.57)
    array.push(p3,    571.14)
    array.push(times, timestamp(2025, 7, 10, 0, 0))
    array.push(m3,    336.64)
    array.push(m2,    376.21)
    array.push(m1,    415.78)
    array.push(fv,    455.35)
    array.push(p1,    494.92)
    array.push(p2,    534.49)
    array.push(p3,    574.06)
    array.push(times, timestamp(2025, 7, 11, 0, 0))
    array.push(m3,    344.88)
    array.push(m2,    384.45)
    array.push(m1,    424.02)
    array.push(fv,    463.59)
    array.push(p1,    503.16)
    array.push(p2,    542.73)
    array.push(p3,    582.3)
    array.push(times, timestamp(2025, 7, 12, 0, 0))
    array.push(m3,    365.33)
    array.push(m2,    404.9)
    array.push(m1,    444.47)
    array.push(fv,    484.04)
    array.push(p1,    523.61)
    array.push(p2,    563.18)
    array.push(p3,    602.75)
    array.push(times, timestamp(2025, 7, 13, 0, 0))
    array.push(m3,    352.56)
    array.push(m2,    392.13)
    array.push(m1,    431.7)
    array.push(fv,    471.27)
    array.push(p1,    510.84)
    array.push(p2,    550.41)
    array.push(p3,    589.98)
    array.push(times, timestamp(2025, 7, 16, 0, 0))
    array.push(m3,    335.67)
    array.push(m2,    375.24)
    array.push(m1,    414.81)
    array.push(fv,    454.38)
    array.push(p1,    493.95)
    array.push(p2,    533.52)
    array.push(p3,    573.09)
    array.push(times, timestamp(2025, 7, 17, 0, 0))
    array.push(m3,    335.23)
    array.push(m2,    374.8)
    array.push(m1,    414.37)
    array.push(fv,    453.94)
    array.push(p1,    493.51)
    array.push(p2,    533.08)
    array.push(p3,    572.64)
    array.push(times, timestamp(2025, 7, 18, 0, 0))
    array.push(m3,    353.94)
    array.push(m2,    393.51)
    array.push(m1,    433.08)
    array.push(fv,    472.65)
    array.push(p1,    512.22)
    array.push(p2,    551.79)
    array.push(p3,    591.36)
    array.push(times, timestamp(2025, 7, 19, 0, 0))
    array.push(m3,    368.9)
    array.push(m2,    408.47)
    array.push(m1,    448.04)
    array.push(fv,    487.61)
    array.push(p1,    527.17)
    array.push(p2,    566.74)
    array.push(p3,    606.31)
    array.push(times, timestamp(2025, 7, 20, 0, 0))
    array.push(m3,    392.07)
    array.push(m2,    431.63)
    array.push(m1,    471.2)
    array.push(fv,    510.77)
    array.push(p1,    550.34)
    array.push(p2,    589.91)
    array.push(p3,    629.48)
    array.push(times, timestamp(2025, 7, 23, 0, 0))
    array.push(m3,    388.41)
    array.push(m2,    427.98)
    array.push(m1,    467.55)
    array.push(fv,    507.12)
    array.push(p1,    546.69)
    array.push(p2,    586.26)
    array.push(p3,    625.83)
    array.push(times, timestamp(2025, 7, 24, 0, 0))
    array.push(m3,    382.19)
    array.push(m2,    421.76)
    array.push(m1,    461.33)
    array.push(fv,    500.9)
    array.push(p1,    540.47)
    array.push(p2,    580.04)
    array.push(p3,    619.61)
    array.push(times, timestamp(2025, 7, 25, 0, 0))
    array.push(m3,    398.3)
    array.push(m2,    437.87)
    array.push(m1,    477.44)
    array.push(fv,    517.01)
    array.push(p1,    556.58)
    array.push(p2,    596.15)
    array.push(p3,    635.72)
    array.push(times, timestamp(2025, 7, 26, 0, 0))
    array.push(m3,    395.54)
    array.push(m2,    435.11)
    array.push(m1,    474.68)
    array.push(fv,    514.25)
    array.push(p1,    553.82)
    array.push(p2,    593.39)
    array.push(p3,    632.96)
    array.push(times, timestamp(2025, 7, 27, 0, 0))
    array.push(m3,    399.34)
    array.push(m2,    438.91)
    array.push(m1,    478.48)
    array.push(fv,    518.05)
    array.push(p1,    557.62)
    array.push(p2,    597.19)
    array.push(p3,    636.76)
    array.push(times, timestamp(2025, 7, 30, 0, 0))
    array.push(m3,    416.29)
    array.push(m2,    455.86)
    array.push(m1,    495.43)
    array.push(fv,    535.0)
    array.push(p1,    574.57)
    array.push(p2,    614.14)
    array.push(p3,    653.71)
    array.push(times, timestamp(2025, 7, 31, 0, 0))
    array.push(m3,    397.04)
    array.push(m2,    436.61)
    array.push(m1,    476.18)
    array.push(fv,    515.75)
    array.push(p1,    555.32)
    array.push(p2,    594.89)
    array.push(p3,    634.46)
    array.push(times, timestamp(2025, 8, 1, 0, 0))
    array.push(m3,    394.04)
    array.push(m2,    433.61)
    array.push(m1,    473.18)
    array.push(fv,    512.75)
    array.push(p1,    552.32)
    array.push(p2,    591.89)
    array.push(p3,    631.46)
    array.push(times, timestamp(2025, 8, 2, 0, 0))
    array.push(m3,    401.18)
    array.push(m2,    440.75)
    array.push(m1,    480.32)
    array.push(fv,    519.89)
    array.push(p1,    559.46)
    array.push(p2,    599.03)
    array.push(p3,    638.6)
    array.push(times, timestamp(2025, 8, 3, 0, 0))
    array.push(m3,    396.85)
    array.push(m2,    436.42)
    array.push(m1,    475.99)
    array.push(fv,    515.56)
    array.push(p1,    555.13)
    array.push(p2,    594.7)
    array.push(p3,    634.27)
    array.push(times, timestamp(2025, 8, 6, 0, 0))
    array.push(m3,    405.1)
    array.push(m2,    444.67)
    array.push(m1,    484.24)
    array.push(fv,    523.81)
    array.push(p1,    563.38)
    array.push(p2,    602.95)
    array.push(p3,    642.52)
    array.push(times, timestamp(2025, 8, 7, 0, 0))
    array.push(m3,    409.09)
    array.push(m2,    448.66)
    array.push(m1,    488.23)
    array.push(fv,    527.8)
    array.push(p1,    567.36)
    array.push(p2,    606.93)
    array.push(p3,    646.5)
    array.push(times, timestamp(2025, 8, 8, 0, 0))
    array.push(m3,    401.6)
    array.push(m2,    441.17)
    array.push(m1,    480.74)
    array.push(fv,    520.31)
    array.push(p1,    559.88)
    array.push(p2,    599.45)
    array.push(p3,    639.02)
    array.push(times, timestamp(2025, 8, 9, 0, 0))
    array.push(m3,    394.67)
    array.push(m2,    434.24)
    array.push(m1,    473.81)
    array.push(fv,    513.38)
    array.push(p1,    552.95)
    array.push(p2,    592.52)
    array.push(p3,    632.09)
    array.push(times, timestamp(2025, 8, 10, 0, 0))
    array.push(m3,    396.15)
    array.push(m2,    435.72)
    array.push(m1,    475.29)
    array.push(fv,    514.86)
    array.push(p1,    554.43)
    array.push(p2,    594.0)
    array.push(p3,    633.57)
    array.push(times, timestamp(2025, 8, 13, 0, 0))
    array.push(m3,    401.8)
    array.push(m2,    441.37)
    array.push(m1,    480.94)
    array.push(fv,    520.51)
    array.push(p1,    560.08)
    array.push(p2,    599.65)
    array.push(p3,    639.22)
    array.push(times, timestamp(2025, 8, 14, 0, 0))
    array.push(m3,    426.68)
    array.push(m2,    466.25)
    array.push(m1,    505.82)
    array.push(fv,    545.39)
    array.push(p1,    584.96)
    array.push(p2,    624.53)
    array.push(p3,    664.1)
    array.push(times, timestamp(2025, 8, 15, 0, 0))
    array.push(m3,    413.99)
    array.push(m2,    453.56)
    array.push(m1,    493.13)
    array.push(fv,    532.7)
    array.push(p1,    572.27)
    array.push(p2,    611.84)
    array.push(p3,    651.41)
    array.push(times, timestamp(2025, 8, 16, 0, 0))
    array.push(m3,    398.9)
    array.push(m2,    438.47)
    array.push(m1,    478.04)
    array.push(fv,    517.61)
    array.push(p1,    557.18)
    array.push(p2,    596.75)
    array.push(p3,    636.32)
    array.push(times, timestamp(2025, 8, 17, 0, 0))
    array.push(m3,    402.18)
    array.push(m2,    441.75)
    array.push(m1,    481.32)
    array.push(fv,    520.89)
    array.push(p1,    560.46)
    array.push(p2,    600.03)
    array.push(p3,    639.6)
    array.push(times, timestamp(2025, 8, 20, 0, 0))
    array.push(m3,    389.37)
    array.push(m2,    428.94)
    array.push(m1,    468.51)
    array.push(fv,    508.08)
    array.push(p1,    547.65)
    array.push(p2,    587.22)
    array.push(p3,    626.79)
    array.push(times, timestamp(2025, 8, 21, 0, 0))
    array.push(m3,    400.58)
    array.push(m2,    440.15)
    array.push(m1,    479.72)
    array.push(fv,    519.29)
    array.push(p1,    558.86)
    array.push(p2,    598.43)
    array.push(p3,    638.0)
    array.push(times, timestamp(2025, 8, 22, 0, 0))
    array.push(m3,    400.88)
    array.push(m2,    440.44)
    array.push(m1,    480.01)
    array.push(fv,    519.58)
    array.push(p1,    559.15)
    array.push(p2,    598.72)
    array.push(p3,    638.29)
    array.push(times, timestamp(2025, 8, 23, 0, 0))
    array.push(m3,    405.74)
    array.push(m2,    445.3)
    array.push(m1,    484.87)
    array.push(fv,    524.44)
    array.push(p1,    564.01)
    array.push(p2,    603.58)
    array.push(p3,    643.15)
    array.push(times, timestamp(2025, 8, 24, 0, 0))
    array.push(m3,    402.88)
    array.push(m2,    442.45)
    array.push(m1,    482.02)
    array.push(fv,    521.59)
    array.push(p1,    561.16)
    array.push(p2,    600.73)
    array.push(p3,    640.3)
    array.push(times, timestamp(2025, 8, 27, 0, 0))
    array.push(m3,    410.68)
    array.push(m2,    450.25)
    array.push(m1,    489.82)
    array.push(fv,    529.38)
    array.push(p1,    568.95)
    array.push(p2,    608.52)
    array.push(p3,    648.09)
    array.push(times, timestamp(2025, 8, 28, 0, 0))
    array.push(m3,    413.98)
    array.push(m2,    453.55)
    array.push(m1,    493.12)
    array.push(fv,    532.69)
    array.push(p1,    572.26)
    array.push(p2,    611.83)
    array.push(p3,    651.4)
    array.push(times, timestamp(2025, 8, 29, 0, 0))
    array.push(m3,    425.32)
    array.push(m2,    464.89)
    array.push(m1,    504.46)
    array.push(fv,    544.03)
    array.push(p1,    583.6)
    array.push(p2,    623.17)
    array.push(p3,    662.74)
    array.push(times, timestamp(2025, 8, 30, 0, 0))
    array.push(m3,    419.92)
    array.push(m2,    459.49)
    array.push(m1,    499.06)
    array.push(fv,    538.63)
    array.push(p1,    578.2)
    array.push(p2,    617.77)
    array.push(p3,    657.34)
    array.push(times, timestamp(2025, 8, 31, 0, 0))
    array.push(m3,    439.33)
    array.push(m2,    478.9)
    array.push(m1,    518.47)
    array.push(fv,    558.04)
    array.push(p1,    597.61)
    array.push(p2,    637.18)
    array.push(p3,    676.75)
    array.push(times, timestamp(2025, 9, 3, 0, 0))
    array.push(m3,    438.82)
    array.push(m2,    478.39)
    array.push(m1,    517.96)
    array.push(fv,    557.53)
    array.push(p1,    597.1)
    array.push(p2,    636.67)
    array.push(p3,    676.24)
    array.push(times, timestamp(2025, 9, 4, 0, 0))
    array.push(m3,    427.06)
    array.push(m2,    466.63)
    array.push(m1,    506.2)
    array.push(fv,    545.76)
    array.push(p1,    585.33)
    array.push(p2,    624.9)
    array.push(p3,    664.47)
    array.push(times, timestamp(2025, 9, 5, 0, 0))
    array.push(m3,    422.22)
    array.push(m2,    461.79)
    array.push(m1,    501.36)
    array.push(fv,    540.93)
    array.push(p1,    580.5)
    array.push(p2,    620.07)
    array.push(p3,    659.64)
    array.push(times, timestamp(2025, 9, 6, 0, 0))
    array.push(m3,    432.84)
    array.push(m2,    472.41)
    array.push(m1,    511.98)
    array.push(fv,    551.55)
    array.push(p1,    591.12)
    array.push(p2,    630.69)
    array.push(p3,    670.26)
    array.push(times, timestamp(2025, 9, 7, 0, 0))
    array.push(m3,    426.97)
    array.push(m2,    466.54)
    array.push(m1,    506.11)
    array.push(fv,    545.68)
    array.push(p1,    585.25)
    array.push(p2,    624.82)
    array.push(p3,    664.39)
    array.push(times, timestamp(2025, 9, 8, 0, 0))
    array.push(m3,    431.25)
    array.push(m2,    470.82)
    array.push(m1,    510.39)
    array.push(fv,    549.96)
    array.push(p1,    589.53)
    array.push(p2,    629.1)
    array.push(p3,    668.67)
    array.push(times, timestamp(2025, 9, 10, 0, 0))
    array.push(m3,    443.61)
    array.push(m2,    483.18)
    array.push(m1,    522.75)
    array.push(fv,    562.32)
    array.push(p1,    601.89)
    array.push(p2,    641.46)
    array.push(p3,    681.03)
    array.push(times, timestamp(2025, 9, 11, 0, 0))
    array.push(m3,    437.68)
    array.push(m2,    477.25)
    array.push(m1,    516.81)
    array.push(fv,    556.38)
    array.push(p1,    595.95)
    array.push(p2,    635.52)
    array.push(p3,    675.09)
    array.push(times, timestamp(2025, 9, 12, 0, 0))
    array.push(m3,    445.95)
    array.push(m2,    485.52)
    array.push(m1,    525.09)
    array.push(fv,    564.66)
    array.push(p1,    604.23)
    array.push(p2,    643.8)
    array.push(p3,    683.37)
    array.push(times, timestamp(2025, 9, 13, 0, 0))
    array.push(m3,    449.02)
    array.push(m2,    488.59)
    array.push(m1,    528.16)
    array.push(fv,    567.73)
    array.push(p1,    607.3)
    array.push(p2,    646.87)
    array.push(p3,    686.44)
    array.push(times, timestamp(2025, 9, 14, 0, 0))
    array.push(m3,    436.62)
    array.push(m2,    476.19)
    array.push(m1,    515.76)
    array.push(fv,    555.33)
    array.push(p1,    594.9)
    array.push(p2,    634.47)
    array.push(p3,    674.03)
    array.push(times, timestamp(2025, 9, 17, 0, 0))
    array.push(m3,    442.06)
    array.push(m2,    481.63)
    array.push(m1,    521.2)
    array.push(fv,    560.77)
    array.push(p1,    600.33)
    array.push(p2,    639.9)
    array.push(p3,    679.47)
    array.push(times, timestamp(2025, 9, 18, 0, 0))
    array.push(m3,    438.67)
    array.push(m2,    478.24)
    array.push(m1,    517.81)
    array.push(fv,    557.38)
    array.push(p1,    596.94)
    array.push(p2,    636.51)
    array.push(p3,    676.08)
    array.push(times, timestamp(2025, 9, 19, 0, 0))
    array.push(m3,    443.65)
    array.push(m2,    483.22)
    array.push(m1,    522.79)
    array.push(fv,    562.35)
    array.push(p1,    601.92)
    array.push(p2,    641.49)
    array.push(p3,    681.06)
    array.push(times, timestamp(2025, 9, 20, 0, 0))
    array.push(m3,    460.62)
    array.push(m2,    500.19)
    array.push(m1,    539.76)
    array.push(fv,    579.33)
    array.push(p1,    618.9)
    array.push(p2,    658.47)
    array.push(p3,    698.04)
    array.push(times, timestamp(2025, 9, 21, 0, 0))
    array.push(m3,    453.68)
    array.push(m2,    493.25)
    array.push(m1,    532.82)
    array.push(fv,    572.39)
    array.push(p1,    611.96)
    array.push(p2,    651.53)
    array.push(p3,    691.1)
    array.push(times, timestamp(2025, 9, 24, 0, 0))
    array.push(m3,    453.2)
    array.push(m2,    492.77)
    array.push(m1,    532.34)
    array.push(fv,    571.91)
    array.push(p1,    611.48)
    array.push(p2,    651.05)
    array.push(p3,    690.62)
    array.push(times, timestamp(2025, 9, 25, 0, 0))
    array.push(m3,    441.88)
    array.push(m2,    481.45)
    array.push(m1,    521.02)
    array.push(fv,    560.59)
    array.push(p1,    600.16)
    array.push(p2,    639.73)
    array.push(p3,    679.3)
    array.push(times, timestamp(2025, 9, 26, 0, 0))
    array.push(m3,    440.84)
    array.push(m2,    480.41)
    array.push(m1,    519.97)
    array.push(fv,    559.54)
    array.push(p1,    599.11)
    array.push(p2,    638.68)
    array.push(p3,    678.25)
    array.push(times, timestamp(2025, 9, 27, 0, 0))
    array.push(m3,    441.45)
    array.push(m2,    481.02)
    array.push(m1,    520.59)
    array.push(fv,    560.16)
    array.push(p1,    599.73)
    array.push(p2,    639.3)
    array.push(p3,    678.87)
    array.push(times, timestamp(2025, 9, 28, 0, 0))
    array.push(m3,    450.12)
    array.push(m2,    489.69)
    array.push(m1,    529.26)
    array.push(fv,    568.83)
    array.push(p1,    608.4)
    array.push(p2,    647.97)
    array.push(p3,    687.54)
    array.push(times, timestamp(2025, 10, 1, 0, 0))
    array.push(m3,    451.72)
    array.push(m2,    491.29)
    array.push(m1,    530.86)
    array.push(fv,    570.43)
    array.push(p1,    610.0)
    array.push(p2,    649.57)
    array.push(p3,    689.14)
    array.push(times, timestamp(2025, 10, 2, 0, 0))
    array.push(m3,    459.1)
    array.push(m2,    498.67)
    array.push(m1,    538.24)
    array.push(fv,    577.81)
    array.push(p1,    617.38)
    array.push(p2,    656.95)
    array.push(p3,    696.52)
    array.push(times, timestamp(2025, 10, 3, 0, 0))
    array.push(m3,    461.87)
    array.push(m2,    501.44)
    array.push(m1,    541.01)
    array.push(fv,    580.58)
    array.push(p1,    620.15)
    array.push(p2,    659.72)
    array.push(p3,    699.29)

// ── One-Time Draw ────────────────────────────────────────────
var bool drawn = false
if showFuture and not drawn and barstate.islastconfirmedhistory
    drawn := true

    // Build point arrays for each band
    var array<chart.point> pts_m3 = array.new<chart.point>()
    var array<chart.point> pts_m2 = array.new<chart.point>()
    var array<chart.point> pts_m1 = array.new<chart.point>()
    var array<chart.point> pts_fv = array.new<chart.point>()
    var array<chart.point> pts_p1 = array.new<chart.point>()
    var array<chart.point> pts_p2 = array.new<chart.point>()
    var array<chart.point> pts_p3 = array.new<chart.point>()
    for i = 0 to array.size(times) - 1
        t = array.get(times, i)
        array.push(pts_m3, chart.point.from_time(t, array.get(m3, i)))
        array.push(pts_m2, chart.point.from_time(t, array.get(m2, i)))
        array.push(pts_m1, chart.point.from_time(t, array.get(m1, i)))
        array.push(pts_fv, chart.point.from_time(t, array.get(fv, i)))
        array.push(pts_p1, chart.point.from_time(t, array.get(p1, i)))
        array.push(pts_p2, chart.point.from_time(t, array.get(p2, i)))
        array.push(pts_p3, chart.point.from_time(t, array.get(p3, i)))

    // Draw each band as a single polyline with transparency
    polyline.new(points=pts_p3, xloc=xloc.bar_time, line_color=color.new(baseCol, 85), line_width=2)
    polyline.new(points=pts_p2, xloc=xloc.bar_time, line_color=color.new(baseCol, 65), line_width=2)
    polyline.new(points=pts_p1, xloc=xloc.bar_time, line_color=color.new(baseCol, 45), line_width=2)
    polyline.new(points=pts_fv, xloc=xloc.bar_time, line_color=color.new(baseCol, 5),  line_width=2)
    polyline.new(points=pts_m1, xloc=xloc.bar_time, line_color=color.new(baseCol, 45), line_width=2)
    polyline.new(points=pts_m2, xloc=xloc.bar_time, line_color=color.new(baseCol, 65), line_width=2)
    polyline.new(points=pts_m3, xloc=xloc.bar_time, line_color=color.new(baseCol, 85), line_width=2)

// Dummy plot for overlay
plot(na)
