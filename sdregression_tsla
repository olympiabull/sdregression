//@version=5
indicator("TSLA Fair Value by Liquidity (100-Day Calendar Lag) w/ +3σ", overlay=true)

// ── INPUTS ─────────────────────────────────────────────────────────────────────────
regLen     = input.int(252,   title="Regression Length (bars)",           minval=10)
lagDays    = input.int(100,   title="Liquidity Lag (calendar days)",      minval=1)
searchBars = input.int(300,   title="Max Bars to Search for Lagged Liquidity", minval=1)

// ── TSLA DATA ───────────────────────────────────────────────────────────────────────
price = close

// ── LIQUIDITY COMPONENTS ────────────────────────────────────────────────────────────
getS(sym) =>
    request.security(sym, "D", close, gaps=barmerge.gaps_off, lookahead=barmerge.lookahead_off)

m2    = getS("FRED:M2SL")
eum2  = getS("ECONOMICS:EUM2") * getS("FX:EURUSD")
cnm2  = getS("ECONOMICS:CNM2") * getS("FX_IDC:CNYUSD")
jpm2  = getS("ECONOMICS:JPM2") * getS("FX_IDC:JPYUSD")
ukm2  = getS("ECONOMICS:GBM2") * getS("FX:GBPUSD")
liqRaw = m2 + eum2 + cnm2 + jpm2 + ukm2

// ── FIND THE BAR INDEX FOR T–lagDays ────────────────────────────────────────────────
targetTime = time - lagDays * 24 * 60 * 60 * 1000

var float liq   = na
var bool  found = false
liq   := na
found := false
for i = 1 to searchBars
    if not found and not na(liqRaw[i]) and time[i] <= targetTime
        liq   := liqRaw[i]
        found := true

// ── ROLLING OLS (liquidity → TSLA) ─────────────────────────────────────────────────
meanX   = ta.sma(liq,   regLen)
meanY   = ta.sma(price, regLen)
covXY   = ta.sma(liq * price, regLen) - meanX * meanY
varX    = ta.sma(liq * liq,    regLen) - meanX * meanX
slope   = covXY / varX
inter   = meanY - slope * meanX
fairVal = inter + slope * liq

// ── RESIDUAL BANDS ─────────────────────────────────────────────────────────────────
resid   = price - fairVal
sigma   = ta.stdev(resid, regLen)
upper1  = fairVal + sigma
upper2  = fairVal + 2 * sigma
upper3  = fairVal + 3 * sigma
lower1  = fairVal - sigma
lower2  = fairVal - 2 * sigma
// optional lower3 = fairVal - 3 * sigma

// ── PLOTTING ────────────────────────────────────────────────────────────────────────
pFair = plot(fairVal,  color=color.blue,      title="Fair Value")
pU1   = plot(upper1,   color=color.green,     title="+1σ")
pU2   = plot(upper2,   color=color.new(color.green, 80), title="+2σ")
pU3   = plot(upper3,   color=color.new(color.green, 60), title="+3σ")
pL1   = plot(lower1,   color=color.red,       title="-1σ")
pL2   = plot(lower2,   color=color.new(color.red,   80), title="-2σ")
// plot(lower3, color=color.new(color.red,40), title="-3σ")  // if you want –3σ

// fills
fill(pU1, pL1, color=color.new(color.gray, 70),  title="±1σ Band")
fill(pU2, pU1, color=color.new(color.gray, 80),  title="+1σ to +2σ Band")
fill(pU3, pU2, color=color.new(color.gray, 80), title="+2σ to +3σ Band")
fill(pL1, pL2, color=color.new(color.gray, 75),  title="-1σ to -2σ Band")
// fill(pL2, pL3, color=color.new(color.gray,100), title="-2σ to -3σ Band")  // if you add lower3
